version: 0.2

phases:
  build:
    commands:
      # install rust and cargo
      # -y option to accept default configuration
      - curl https://sh.rustup.rs -sSf | sh -s -- -y

      # configure shell so we can use "cargo" command
      - . "$HOME/.cargo/env"
      
      # reference cargo directly
      - cargo --version

      # install cargo-lambda
      - pip3 install cargo-lambda

      # copy the weather file
      - aws s3 cp s3://ecaas-api-pipeline-storage/ecaas-api-pipeline/weather.epw lambda/src/weather.epw

      # enter lambda directory
      - cd lambda

      # make HEM software version available in environment
      - export HEM_SOFTWARE_VERSION=`grep "^source.*home-energy-model" Cargo.lock | grep -oE "[0-9a-f]{7}" | head -1`

      # build the lambda
      - cargo lambda build --arm64 -r --output-format zip

  post_build:
    commands:
      - echo "Running post_build commands"

artifacts:
  files:
    - lambda/target/lambda/ecaas-lambda/bootstrap.zip
  discard-paths: yes

cache:
  paths:
    - '/root/.cargo/registry/**/*'
    - 'lambda/target/**/*'
